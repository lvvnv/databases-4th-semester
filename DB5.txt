1. Ќайти среднее количество покупок на чек дл€ каждого покупател€ (2 способа).
WITH TMP(SOID, CHECKCOUNT)
AS
(
	SELECT SOD.SalesOrderID, COUNT(SOD.SalesOrderDetailID)
	FROM [Sales].[SalesOrderDetail] AS SOD
	GROUP BY SOD.SalesOrderID
)
SELECT SOH.CustomerID, AVG(TMP.CHECKCOUNT)
FROM [Sales].[SalesOrderHeader] AS SOH
INNER JOIN TMP
ON SOH.SalesOrderID=TMP.SOID
GROUP BY SOH.CustomerID
_________________________
SELECT SOH1.CustomerID, (
	SELECT COUNT(*)
	FROM [Sales].[SalesOrderDetail] AS SOD
	INNER JOIN [Sales].[SalesOrderHeader] AS SOH
	ON SOD.SalesOrderID=SOH.SalesOrderID
	WHERE SOH.CustomerID=SOH1.CustomerID
	) / COUNT(*)
FROM [Sales].[SalesOrderHeader] AS SOH1
GROUP BY SOH1.CustomerID
ORDER BY 1 ASC

2. Ќайти дл€ каждого продукта и каждого покупател€ соотношение количества
фактов покупки данного товара данным покупателем к общему количеству
фактов покупки товаров данным покупателем
WITH TMP1(CustomerID, ProductID, Amount)
AS
(
	SELECT SOH1.CustomerID, SOD1.ProductID, COUNT(*)
	FROM [Sales].[SalesOrderDetail] AS SOD1
	INNER JOIN [Sales].[SalesOrderHeader] AS SOH1
	ON SOD1.SalesOrderID = SOH1.SalesOrderID
	GROUP BY SOH1.CustomerID, SOD1.ProductID
),
	TMP2(CustomerID, Amount)
AS
(
	SELECT SOH2.CustomerID, COUNT(*)
	FROM [Sales].[SalesOrderDetail] AS SOD2
	INNER JOIN [Sales].[SalesOrderHeader] AS SOH2
	ON SOD2.SalesOrderID = SOH2.SalesOrderID
	GROUP BY SOH2.CustomerID
)
SELECT SOH.CustomerID, SOD.ProductID,
	(
	SELECT TMP2.Amount 
	FROM TMP2
	WHERE TMP2.CustomerID=SOH.CustomerID
	)
	/
	(
	SELECT TMP1.Amount
	FROM TMP1
	WHERE TMP1.CustomerID=SOH.CustomerID AND TMP1.ProductID=SOD.ProductID
	) AS '1/x part'
FROM [Sales].[SalesOrderDetail] AS SOD
INNER JOIN [Sales].[SalesOrderHeader] AS SOH
ON SOD.SalesOrderID = SOH.SalesOrderID

3. ¬ывести на экран след€щую информацию: Ќазвание продукта, ќбщее
количество фактов покупки этого продукта, ќбщее количество покупателей
этого продукта
WITH TMP1(ProductID, Amount)
AS
(
	SELECT SOD.ProductID, COUNT(*)
	FROM [Sales].[SalesOrderDetail] AS SOD
	GROUP BY SOD.ProductID
),
TMP2(ProductID, Amount)
AS
(
	SELECT SOD.ProductID, COUNT(DISTINCT SOH.CustomerID)
	FROM [Sales].[SalesOrderDetail] AS SOD
	INNER JOIN [Sales].[SalesOrderHeader] AS SOH
	ON SOD.SalesOrderID=SOH.SalesOrderID
	GROUP BY SOD.ProductID
)
SELECT P.Name, 
	(
	SELECT TMP1.Amount
	FROM TMP1
	WHERE TMP1.ProductID=P.ProductID
	) AS 'Sales',
	(
	SELECT TMP2.Amount
	FROM TMP2
	WHERE TMP2.ProductID=P.ProductID
	) AS 'Customers'
FROM [Production].[Product] AS P
INNER JOIN (
	SELECT SOD.ProductID, COUNT(*) AS 'Amount'
	FROM [Sales].[SalesOrderDetail] AS SOD
	GROUP BY SOD.ProductID
	) AS TMP
ON P.ProductID=TMP.ProductID

4. ¬ывести дл€ каждого покупател€ информацию о максимальной и минимальной стоимости
одной покупки, чеке, в виде таблицы: номер покупател€, максимальна€ сумма, минимальна€ сумма.
WITH TMP(Customer, SaleId, Price)
AS
(
	SELECT SOH.CustomerID, SOH.SalesOrderID, SUM(SOD.OrderQty * SOD.UnitPrice)
	FROM [Sales].[SalesOrderDetail] AS SOD
	INNER JOIN [Sales].[SalesOrderHeader] AS SOH
	ON SOD.SalesOrderID=SOH.SalesOrderID
	GROUP BY SOH.CustomerID, SOH.SalesOrderID
)
SELECT TMP.Customer, MAX(TMP.Price) AS 'MAX', MIN(TMP.Price) AS 'MIN'
FROM TMP
GROUP BY TMP.Customer
ORDER BY 1 ASC

5. Ќайти номера покупателей, у которых не было нет ни одной пары чеков с
одинаковым количеством наименований товаров.
WITH TMP(Customer, SaleId, Amount)
AS
(
	SELECT SOH.CustomerID, SOH.SalesOrderID, COUNT(SOD.SalesOrderDetailID)
	FROM [Sales].[SalesOrderHeader] AS SOH
	INNER JOIN [Sales].[SalesOrderDetail] AS SOD
	ON SOH.SalesOrderID=SOD.SalesOrderID
	GROUP BY SOH.CustomerID, SOH.SalesOrderID
)
SELECT T.Customer
FROM (
SELECT TMP.Customer, COUNT(*) AS 'C'
FROM TMP
GROUP BY TMP.Customer, TMP.Amount
) T
GROUP BY T.Customer
HAVING MAX(T.C)=1
ORDER BY 1

6. Ќайти номера покупателей, у которых все купленные ими товары были
куплены как минимум дважды, т.е. на два разных чека.
WITH TMP(Customer, ProductId, Amount)
AS
(
	SELECT SOH.CustomerID, SOD.ProductID, COUNT(*)
	FROM [Sales].[SalesOrderHeader] AS SOH
	INNER JOIN [Sales].[SalesOrderDetail] AS SOD
	ON SOH.SalesOrderID=SOD.SalesOrderID
	GROUP BY SOH.CustomerID, SOD.ProductID
)
SELECT TMP.Customer
FROM TMP
GROUP BY TMP.Customer
HAVING MIN(TMP.Amount)>1